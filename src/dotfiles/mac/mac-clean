#!/usr/bin/env bash

sudo -v
while true; do sudo -n true; sleep 60; kill -0 "$$" || exit; done 2>/dev/null &

free_before=`df -m | grep /dev/disk1 | awk '{ print $4 }'`

# -------------------------------------------------------------
# Cleaning Log files
echo "==> log files"
sudo rm -Rf "$HOME"/Library/Logs/*
echo "$HOME/Library/Logs"
sudo rm -Rf /Library/Logs/*
echo "/Library/Logs"
sudo rm -Rf "$HOME"/Library/Containers/*/Data/Library/Logs/*
echo "$HOME/Library/Container/*/Library/Logs"

# Cleaning Cache files
# echo "==> cache files"
# sudo rm -Rf "$HOME"/Library/Caches/*
# echo "$HOME/Library/Caches"
# sudo rm -Rf /Library/Caches/*
# echo "/Library/Caches"
# sudo rm -Rf "$HOME"/Library/Containers/*/Data/Library/Caches/*
# echo "$HOME/Library/Container/*/Library/Caches"

# -------------------------------------------------------------
# # Get rid of localizations: APPS/Contents/Resources/*.lproj
# # except English.lproj, Base.lproj, en.lproj

echo "==> Locale files"
macCleanList=`mktemp -t macClean`
echo "searching..."
sudo find /Users /Applications /opt /Library /System -iregex '.*\.lproj' | \
perl -wnE 'say for /.+(?<!English)(?<!en)(?<!en_US)(?<!Base)\.lproj/g' > "$macCleanList"
echo "found `cat $macCleanList | wc -l`"
echo "deleting..."
while read in; do sudo rm -Rf "$in"; done < "$macCleanList"

# -------------------------------------------------------------
# Chrome

# Clean Chrome Extensions folder, keeping olny the most recent version
echo "==> old chrome extensions"
EXTS_DIR="$HOME/Library/Application Support/Google/Chrome/Default/Extensions"
for EDIR in `ls -1 "$EXTS_DIR"`; do
  num_ext=`ls -1 "$EXTS_DIR/$EDIR" | wc -l`
  if [ $num_ext -gt 1 ]; then
    ls -1tUr "$EXTS_DIR/$EDIR" | \
    head -n $(expr $num_ext - 1) | \
    awk -v path="$EXTS_DIR/$EDIR/" '{ print "\"" path $0 "\"" }' | \
    xargs rm -Rf
  fi
done

# Clean up old versions of chrome
cleanup_old_versions_of_chrome() {
  chrome_versions_count=0
  if [ ! -z "$chrome" ]; then
    echo "$chrome"
    chrome_versions_count=$(ls "$chrome"/Contents/Versions | wc -l)
    if [[ $chrome_versions_count -gt 1 ]]; then
      echo "more than one version, should be cleaned"
      ls -1tUr "$chrome/Contents/Versions" | \
      head -n $(expr $chrome_versions_count - 1) | \
      awk -v path="$chrome/Contents/Versions/" '{ print "\"" path $0 "\"" }' | \
      xargs rm -Rf
    else
      echo "just one verison"
    fi
  else
    echo "can't find app"
  fi
}

echo "==> old versions of Google Chrome"
chrome=$(osascript -e 'POSIX path of (path to application "Chrome")' 2> /dev/null)
cleanup_old_versions_of_chrome

chrome=$(osascript -e 'POSIX path of (path to application "Google Chrome Canary")' 2> /dev/null)
echo "==> old versions of Google Chrome Canary"
cleanup_old_versions_of_chrome

# -------------------------------------------------------------
echo "==> twitter cached photos from old tweets"
twitter_cache="$HOME"/Library/Containers/com.twitter.twitter-mac/Data/Library/Caches/com.atebits.tweetie.profile-images
find "$twitter_cache" -regex '.*___2Fmedia.*' -exec rm -f '{}' \;
find "$twitter_cache" -regex '.*___2Fprofile_banners.*' -exec rm -f '{}' \;

# -------------------------------------------------------------
echo "==> 100+ System fonts that are never used"
list=$(cat <<EOF
Apple LiGothic Medium.ttf
Apple LiSung Light.ttf
AppleGothic.ttf
AppleMyungjo.ttf
AppleSDGothicNeo-ExtraBold.otf
AppleSDGothicNeo-Heavy.otf
AppleSDGothicNeo-Light.otf
AppleSDGothicNeo-Medium.otf
AppleSDGothicNeo-SemiBold.otf
AppleSDGothicNeo-Thin.otf
AppleSDGothicNeo-UltraLight.otf
Bangla MN.ttc
Bangla Sangam MN.ttc
Baoli.ttc
BiauKai.ttf
Devanagari Sangam MN.ttc
DevanagariMT.ttf
DevanagariMTBold.ttf
Gujarati Sangam MN.ttc
GujaratiMT.ttf
GujaratiMTBold.ttf
Gungseouche.ttf
Gurmukhi MN.ttc
Gurmukhi Sangam MN.ttc
Gurmukhi.ttf
Hannotate.ttc
Hanzipen.ttc
Hiragino Sans GB W3.otf
Hiragino Sans GB W6.otf
ITFDevanagari.ttc
Kailasa.ttf
Kaiti.ttc
Kannada MN.ttc
Kannada Sangam MN.ttc
Khmer MN.ttc
Khmer Sangam MN.ttf
Kokonor.ttf
KozGoPr6N-Bold.otf
KozGoPr6N-ExtraLight.otf
KozGoPr6N-Heavy.otf
KozGoPr6N-Light.otf
KozGoPr6N-Medium.otf
KozGoPr6N-Regular.otf
KozGoPro-Bold.otf
KozGoPro-ExtraLight.otf
KozGoPro-Heavy.otf
KozGoPro-Light.otf
KozGoPro-Medium.otf
KozGoPro-Regular.otf
KozMinPr6N-Bold.otf
KozMinPr6N-ExtraLight.otf
KozMinPr6N-Heavy.otf
KozMinPr6N-Light.otf
KozMinPr6N-Medium.otf
KozMinPr6N-Regular.otf
KozMinPro-Bold.otf
KozMinPro-ExtraLight.otf
KozMinPro-Heavy.otf
KozMinPro-Light.otf
KozMinPro-Medium.otf
KozMinPro-Regular.otf
Lantinghei.ttc
Lao MN.ttc
Lao Sangam MN.ttf
Libian.ttc
Malayalam MN.ttc
Malayalam Sangam MN.ttc
MshtakanBold.ttf
MshtakanBoldOblique.ttf
MshtakanOblique.ttf
MshtakanRegular.ttf
Myanmar MN.ttc
Myanmar Sangam MN.ttf
NanumGothic.ttc
NanumMyeongjo.ttc
NanumScript.ttc
NISC18030.ttf
Oriya MN.ttc
Oriya Sangam MN.ttc
Osaka.ttf
OsakaMono.ttf
PCmyoungjo.ttf
Pilgiche.ttf
Sinhala MN.ttc
Sinhala Sangam MN.ttc
Songti.ttc
Tamil MN.ttc
Tamil Sangam MN.ttc
Telugu MN.ttc
Telugu Sangam MN.ttc
WawaSC-Regular.otf
WawaTC-Regular.otf
WeibeiSC-Bold.otf
WeibeiTC-Bold.otf
Xingkai.ttc
Yu Gothic Bold.otf
Yu Gothic Medium.otf
Yu Mincho Demibold.otf
Yu Mincho Medium.otf
Yuanti.ttc
YuppySC-Regular.otf
YuppyTC-Regular.otf
ヒラギノ丸ゴ Pro W4.otf
ヒラギノ丸ゴ ProN W4.otf
ヒラギノ明朝 Pro W3.otf
ヒラギノ明朝 Pro W6.otf
ヒラギノ角ゴ Pro W3.otf
ヒラギノ角ゴ Pro W6.otf
ヒラギノ角ゴ Std W8.otf
ヒラギノ角ゴ StdN W8.otf
儷宋 Pro.ttf
儷黑 Pro.ttf
华文仿宋.ttf
华文细黑.ttf
华文黑体.ttf
EOF
)

while read -r line; do
  if [ -f /Library/Fonts/"$line" ]; then
    sudo rm /Library/Fonts/"$line"
  fi
done <<< "$list"

echo "==> some System dictionaries that are never used"
list=$(cat <<EOF2
Diccionario General de la Lengua Española Vox.dictionary
Duden Dictionary Data Set I.dictionary
Dutch.dictionary
Italian.dictionary
Korean - English.dictionary
Korean.dictionary
Multidictionnaire de la langue française.dictionary
Portuguese.dictionary
Russian.dictionary
Sanseido Super Daijirin.dictionary
Sanseido The WISDOM English-Japanese Japanese-English Dictionary.dictionary
Simplified Chinese - English.dictionary
Spanish - English.dictionary
Thai.dictionary
The Standard Dictionary of Contemporary Chinese.dictionary
Turkish.dictionary
EOF2
)

while read -r line; do
  if [ -d /Library/Dictionaries/"$line" ]; then
    sudo rm -Rf /Library/Dictionaries/"$line"
  fi
done <<< "$list"
# -------------------------------------------------------------

echo
echo "---------------------------------"
free_after=`df -m | grep /dev/disk1 | awk '{ print $4 }'`
echo "==> Cleaned up $(expr $free_after - $free_before) MB"

# -------------------------------------------------------------
