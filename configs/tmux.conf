# set -g default-terminal "xterm-256color"

bind s copy-mode
bind -t emacs-copy 'p' scroll-up
bind -t emacs-copy 'n' scroll-down
bind -t emacs-copy 'i' scroll-up
bind -t emacs-copy 'k' scroll-down

# Highlight active window
# set-window-option -g window-status-current-bg default

set -g pane-active-border-bg default

# new-window -n 'Minicom'
# new-window -n 'Recovery'
# new-window -n 'zFAS'

#### statusbar ####

set -g status-left-length 50
set -g status-right-length 50
# set-option -g status-left "#(~/workspace/env/tmux-powerline/powerline.sh left)"
# set-option -g status-right "#(~/workspace/env/tmux-powerline/powerline.sh right)"

set -g status-interval 1
set -g status-justify left # center align window list
set -g status-left ' #[bold]:#S: '
# set -g status-right '#[fg=blue,bright]Up#(uptime | cut -f 4-5 -d " " | cut -f 1 -d ",") #[default]:: #[fg=cyan]#(cut -d " " -f 1-4 /proc/loadavg) '

# # default statusbar colors
set -g status-bg "#B22222"
set -g status-fg colour223
set -g status-attr dim

# default window title colors
set-window-option -g window-status-fg colour223
set-window-option -g window-status-bg "#B22222"
set-window-option -g window-status-attr dim

# active window title colors
set-window-option -g window-status-current-fg "#B22222"
set-window-option -g window-status-current-bg colour223
set-window-option -g window-status-current-attr bright

# command/message line colors
set -g message-bg "#B22222"
set -g message-fg colour223
set -g message-attr bright

set-option -g status-utf8 on

# Set status bar
set -g status-bg "#B22222"
set -g status-fg colour223
# set -g status-left "#[fg=colour187]"
# set -g status-right "#[fg=colour187]#(uptime | cut -d ',' -f 2-) #H"

# Examples
# --------

# Activity monitoring
#setw -g monitor-activity on
#set -g visual-activity on


set-option -g prefix "C-b"
# set-option -g prefix "C-\;"

# C-b C-b for the Last Active Window
bind-key C-b last-window

# Emacs style
# set -g status-keys emacs
# set -gw mode-keys emacs

# Start windows and panes at 1, not 0
set -g base-index 1
set -g pane-base-index 1

# Faster Command Sequences
set -s escape-time 0

# Aggressive Resize
setw -g aggressive-resize on

# Tmux Reload
unbind r
bind r display 'Reloading configuration' \;\
     source-file ~/.tmux.conf

     # Mouse settings
# set-window-option -g mode-mouse on
# set -g mode-mouse on
# set -g mouse-resize-pan on
# set -g mouse-select-pan on
# set -g mouse-select-window on

# # Toggle mouse on with m
# bind m \
#      set -g mode-mouse on \;\
#      set -g mouse-resize-pan on \;\
#      set -g mouse-select-pan on \;\
#      set -g mouse-select-window on \;\
#      display 'Mouse: ON'

# # Toggle mouse off with m
# bind M \
#      set -g mode-mouse off \;\
#      set -g mouse-resize-pan off \;\
#      set -g mouse-select-pan off \;\
#      set -g mouse-select-window off \;\
#      display 'Mouse: OFF'

# set-window-option -g window-status-current-format "#[fg=colour235, bg=colour27]⮀#[fg=colour255, bg=colour27] #I ⮁ #W #[fg=colour27, bg=colour235]⮀"


# # set prefix key to ctrl+t
# unbind C-b
# set -g prefix C-t

# # more intuitive keybindings for splitting
# unbind %
# bind h split-window -h
# unbind '"'
# bind v split-window -v

# # set vi keys
# unbind [
# bind Escape copy-mode
# setw -g mode-keys vi

# # send the prefix to client inside window (ala nested sessions)
# bind-key a send-prefix

# # toggle last window like screen
# bind-key C-b last-window

# # confirm before killing a window or the server
# bind-key k confirm kill-window
# bind-key K confirm kill-server

# # toggle statusbar
# bind-key b set-option status

# # ctrl+left/right cycles thru windows
# bind-key -n C-right next
# bind-key -n C-left prev

# # open a man page in new window
# bind / command-prompt "split-window 'exec man %%'"

# # quick view of processes
# bind '~' split-window "exec htop"

# # scrollback buffer n lines
# set -g history-limit 5000

# # on-screen time for display-panes in ms
# set -g display-panes-time 2000

# # start window indexing at one instead of zero
# set -g base-index 1

# enable wm window titles
# set -g set-titles on
# wm window title string (uses statusbar variables)
# set -g set-titles-string "tmux:#I #W"
# set -g set-titles-string "Terminal"

# session initialization
# new -s TTYtter ttytter
# neww -t 2
# neww -d -t 3
# neww -d -t 5
# selectw -t 1
